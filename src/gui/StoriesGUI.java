/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import core.Stemmer;
import core.Coordinator;
import java.awt.Color;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.image.*;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.imageio.ImageIO;
import java.awt.Image;
 import java.awt.Font;
import java.awt.Graphics2D;
import core.KJV;
import java.awt.BorderLayout;
import java.awt.DisplayMode;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
/**
 *
 * @author giovanni
 */
public class StoriesGUI extends javax.swing.JFrame {

    /**
     * Creates new form StoriesGUI
     */
    List<String> usedWord = new ArrayList();
    HashMap<String, String> images = new HashMap<String, String>();
    HashMap<Integer, String> verseImage = new HashMap<>();
    ImageIcon imageIcon = new ImageIcon();
    String imageDirectory;
    int nextVerse = 0;
    public StoriesGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        storyList = new javax.swing.JComboBox<>();
        previous_verse = new javax.swing.JButton();
        next_verse = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bibleText = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        storyList.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        storyList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        List<String> stories = Coordinator.getAllStories();

        for (int i = 0; i<stories.size(); i++)
        {
            storyList.addItem(Coordinator.getTheStoryTitle(i));
        }
        storyList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storyListActionPerformed(evt);
            }
        });

        previous_verse.setText("BACK");
        previous_verse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previous_verseActionPerformed(evt);
            }
        });

        next_verse.setText("NEXT");
        next_verse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_verseActionPerformed(evt);
            }
        });

        bibleText.setColumns(20);
        bibleText.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        bibleText.setLineWrap(true);
        bibleText.setRows(5);
        bibleText.setWrapStyleWord(true);
        jScrollPane2.setViewportView(bibleText);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(1000000, 1000000));
        jLabel1.setPreferredSize(new java.awt.Dimension(1000000, 100000));
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("jLabel2");

        jButton1.setText("Full Screen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Next2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(storyList, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(previous_verse, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(next_verse, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(storyList, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(previous_verse, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(next_verse, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jButton1)))
                .addGap(10, 10, 10)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Image getScaledImage(Image srcImg, int w, int h){
    BufferedImage resizedImg = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
    Graphics2D g2 = resizedImg.createGraphics();

   // g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
    g2.drawImage(srcImg, 0, 0, w, h, null);
    g2.dispose();

    return resizedImg;
}
    
    public void setImage()
    {
               bibleText.setText("");
        KJV kjv = new KJV();
        List<String> stopWords = kjv.getStopWords();
        
        int titleIndex = storyList.getSelectedIndex();
        String bookFile = Coordinator.getTheBookFile(titleIndex);
        int chapter = Coordinator.getTheChapterNumber(titleIndex);
        imageDirectory = Coordinator.getImageDirectory(titleIndex);       
        images =Coordinator.getImages("/resources/images/bible/"+imageDirectory);
        HashMap<Integer, String> numberedImages = new HashMap<>();
        System.out.println("this is the size of images" + images.size());
        Set<String> imageKey = images.keySet();
        int count = 0;
        for (String key : imageKey)
        {
            numberedImages.put(count, images.get(key));
        }
        //get the whole chapter
        List<String> verses = Coordinator.getTheChapter(bookFile, chapter);
        //get a verse
        for (int i =0; i<verses.size(); i++)
        {
            String text = verses.get(i);
            String[] textSplit = text.split(" ");
            for (String key : imageKey)
            {
               if (Arrays.asList(textSplit).contains(key))
                {
                    verseImage.put(i, images.get(key));
                }
            }
            
        }
        System.out.println("size of verseImage map: " + verseImage.size());
        String verseText= verses.get(nextVerse);
        //change verse
        //display the verse
        bibleText.append(verseText + "\n\n");   
        //set the text area to go to the beginning of the line
        bibleText.setCaretPosition(0);
        //remove all non-alpha characters
        String cleanVerse = verseText.replaceAll("[\\)\\(\\,:;.?![0-9]\\}]", "").replaceAll("\\[", "").replaceAll("\\]", "");
        //split the verse into an array of words
        String[] splitVerseText = cleanVerse.split(" ");
        
        //loop through the array of words to stem each word
        for (int keyWord = 0; keyWord<splitVerseText.length; keyWord++)
        {
            //create a stemmer
           Stemmer stemmer = new Stemmer();
           //create a variable for a word to stem
           String rawWord = splitVerseText[keyWord];
           //filter words that are stopWords
           if (stopWords.contains(rawWord)==false && usedWord.contains(rawWord)==false)
           {
                char[] characters = rawWord.toCharArray();
                for (char c : characters)
                {
                    stemmer.add(c);
                }
           }
           stemmer.stem();
           //output stem word to a String
           String stemmedWord = stemmer.toString();
           
           if (images.containsKey(stemmedWord))
           {         
                    String imageFileName = images.get(stemmedWord);
                    
                    jLabel2.setText(splitVerseText[keyWord]);  
                    usedWord.add(jLabel2.getText());
                    jLabel2.setFont(new Font("Serif", Font.BOLD, 30));
                    //load the imageIcon
                    imageIcon = new javax.swing.ImageIcon(getClass().getResource("/resources/images/bible/"+imageDirectory+"/"+imageFileName));
                    //get the image
                    Image image = imageIcon.getImage();
                    //transform it
                    Image newimg = image.getScaledInstance(800, 600,  java.awt.Image.SCALE_SMOOTH);
                    //get the new image
                    imageIcon = new ImageIcon(newimg);
                    jLabel1.setIcon(imageIcon);
                    images.remove(imageFileName);
                
           }
        }
    }

    public void fullScreenMode()
    {
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gs = ge.getDefaultScreenDevice();
        DisplayMode dm = gs.getDisplayMode();
        int screenWidth = dm.getWidth()-5;
        int screenHeight = dm.getHeight()-5;
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        this.setVisible(true);
        this.setLayout(new BorderLayout());

        jScrollPane2.setVisible(false);
        previous_verse.setVisible(false);
        next_verse.setVisible(false);
        storyList.setVisible(false);
        jButton1.setVisible(false);
        jLabel1.setSize(screenWidth, screenHeight);
        jPanel1.setVisible(false);
        this.add(jLabel1, BorderLayout.CENTER);
        this.add(bibleText, BorderLayout.SOUTH);
        int middle = screenWidth/2;
        this.add(jLabel2, BorderLayout.NORTH);
        int width = jLabel1.getWidth();
        int height = jLabel1.getHeight();
        Image image = imageIcon.getImage();
        Image newImage = image.getScaledInstance(width, height,  java.awt.Image.SCALE_SMOOTH);
        imageIcon = new ImageIcon(newImage);
        jLabel1.setIcon(imageIcon);     
        this.pack();


    }

    private void next_verseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_verseActionPerformed
        // TODO add your handling code here:
        nextVerse++;
        setImage();

        //String fileName = "/resources/danielLion_images/alter.jpg";
        //Icon icon = new ImageIcon(getClass().getResource(fileName));
    }//GEN-LAST:event_next_verseActionPerformed

    private void previous_verseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previous_verseActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:

        nextVerse--;
        setImage();
        int size = usedWord.size();
        usedWord.remove(size-1);


        
        //String fileName = "/resources/danielLion_images/alter.jpg";
        //Icon icon = new ImageIcon(getClass().getResource(fileName));
    }//GEN-LAST:event_previous_verseActionPerformed

    private void storyListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storyListActionPerformed
        // TODO add your handling code here:
        usedWord = new ArrayList();
        images = new HashMap<String, String>();
        nextVerse = 0;
        setImage();
    }//GEN-LAST:event_storyListActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    
        fullScreenMode();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:      
        setImage();
        fullScreenMode();
        nextVerse++;

    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                            String imageFileName = verseImage.get(nextVerse);
                    
                    jLabel2.setText(imageFileName);  
                    usedWord.add(jLabel2.getText());
                    jLabel2.setFont(new Font("Serif", Font.BOLD, 30));
                    //load the imageIcon
                    imageIcon = new javax.swing.ImageIcon(getClass().getResource("/resources/images/bible/"+imageDirectory+"/"+imageFileName));
                    //get the image
                    Image image = imageIcon.getImage();
                    //transform it
                    Image newimg = image.getScaledInstance(800, 600,  java.awt.Image.SCALE_SMOOTH);
                    //get the new image
                    imageIcon = new ImageIcon(newimg);
                    jLabel1.setIcon(imageIcon);
                    nextVerse++;
                    for (int n=0; n<verseImage.size(); n++)
                    {
                        System.out.println(verseImage.get(n));
                    }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoriesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoriesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoriesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoriesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoriesGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea bibleText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton next_verse;
    private javax.swing.JButton previous_verse;
    private javax.swing.JComboBox<String> storyList;
    // End of variables declaration//GEN-END:variables
}
