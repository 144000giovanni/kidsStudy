/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import core.Stemmer;
import core.Coordinator;
import java.awt.Color;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.image.*;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.imageio.ImageIO;
import java.awt.Image;
 import java.awt.Font;
import java.awt.Graphics2D;
import core.KJV;
import java.awt.BorderLayout;
import java.awt.GraphicsEnvironment;
import java.awt.GraphicsDevice;
import java.awt.DisplayMode;
/**
 *
 * @author giovanni
 */
public class ScienceGUI extends javax.swing.JFrame {

    /**
     * Creates new form StoriesGUI
     */
    List<String> usedWord = new ArrayList();
    HashMap<String, String> images = new HashMap<String, String>();
    HashMap<Integer, String> loopImages = new HashMap<>();
    ImageIcon imageIcon;
    String imageDirectory;
    int nextImageNumber = 1;
    public ScienceGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        storyList = new javax.swing.JComboBox<>();
        previous_verse = new javax.swing.JButton();
        next_verse = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bibleText = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        imageTitle = new javax.swing.JLabel();
        fullScreen = new javax.swing.JButton();
        index_of_image = new javax.swing.JLabel();
        totalPics = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        storyList.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        storyList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        List<String> scienceTopics = Coordinator.ScienceGetAllTopics();

        for (int i = 0; i<scienceTopics.size(); i++)
        {
            storyList.addItem(Coordinator.ScienceGetTheStoryTitle(i));
        }
        storyList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storyListActionPerformed(evt);
            }
        });

        previous_verse.setBackground(new java.awt.Color(255, 255, 0));
        previous_verse.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        previous_verse.setText("BACK");
        previous_verse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        previous_verse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previous_verseActionPerformed(evt);
            }
        });

        next_verse.setBackground(new java.awt.Color(51, 255, 0));
        next_verse.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        next_verse.setText("NEXT");
        next_verse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        next_verse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_verseActionPerformed(evt);
            }
        });

        bibleText.setColumns(20);
        bibleText.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        bibleText.setLineWrap(true);
        bibleText.setRows(5);
        bibleText.setWrapStyleWord(true);
        bibleText.setBorder(null);
        jScrollPane2.setViewportView(bibleText);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 854, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        imageTitle.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N

        fullScreen.setText("Full Screen");
        fullScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullScreenActionPerformed(evt);
            }
        });

        index_of_image.setBackground(new java.awt.Color(255, 0, 51));
        index_of_image.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        index_of_image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        index_of_image.setText("0");
        index_of_image.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        totalPics.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        totalPics.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalPics.setText("0");
        totalPics.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("");
        jLabel1.setToolTipText("");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(storyList, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(previous_verse, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(next_verse, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(index_of_image, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(239, 239, 239))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(totalPics, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(191, 191, 191))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(imageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(fullScreen)
                        .addContainerGap(661, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(storyList, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(previous_verse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(next_verse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(fullScreen))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(index_of_image, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalPics))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void storyListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storyListActionPerformed
        // TODO add your handling code here:
        nextImageNumber = 1;
        int titleIndex = storyList.getSelectedIndex();
        imageDirectory = Coordinator.ScienceGetImageDirectory(titleIndex); 
        System.out.println("this is the image directory" + imageDirectory);
        images = new HashMap<>();
        images =Coordinator.ScienceGetImages("/resources/images/science/"+imageDirectory);   
        System.out.println(images.size());
        Set<String> imageKey = images.keySet();
        loopImages = new HashMap<>();        
        int loopCount = 1;
        for (String key : imageKey)
        {            
            loopImages.put(loopCount, images.get(key));
            loopCount++;
        } 
        totalPics.setText(Integer.toString(loopImages.size()));
        index_of_image.setText(Integer.toString(nextImageNumber));
        index_of_image.setHorizontalAlignment(SwingConstants.CENTER);
        setImage();
       
       
    }//GEN-LAST:event_storyListActionPerformed

    private Image getScaledImage(Image srcImg, int w, int h){
    BufferedImage resizedImg = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
    Graphics2D g2 = resizedImg.createGraphics();

   // g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
    g2.drawImage(srcImg, 0, 0, w, h, null);
    g2.dispose();

    return resizedImg;
}

    private void setImage()
    {
            String imageFileName = loopImages.get(nextImageNumber);
            String[] imageName = imageFileName.split("\\.");
            index_of_image.setText(Integer.toString(nextImageNumber));
            index_of_image.setHorizontalAlignment(SwingConstants.CENTER);
            imageTitle.setText(imageName[0]);  
            imageIcon = new javax.swing.ImageIcon(getClass().getResource("/resources/images/science/"+imageDirectory+"/"+imageFileName));
            
            //get the image
            Image image = imageIcon.getImage();
            //transform it
            Image newimg = image.getScaledInstance(600, 400,  java.awt.Image.SCALE_SMOOTH);
            //get the new image
            imageIcon = new ImageIcon(newimg);
            jLabel1.setIcon(imageIcon);  
            bibleText.setCaretPosition(0);
            imageTitle.setFont(new Font("Serif", Font.BOLD, 48));   
            imageTitle.setHorizontalAlignment(SwingConstants.CENTER);
            
    }
    
    private void next_verseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_verseActionPerformed
        // TODO add your handling code here: 
        nextImageNumber++;
        setImage();
            
    }//GEN-LAST:event_next_verseActionPerformed

    private void previous_verseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previous_verseActionPerformed
        // TODO add your handling code here:
            nextImageNumber--;
            setImage();
            
        
    }//GEN-LAST:event_previous_verseActionPerformed

    public void fullScreenMode()
    {
                // TODO add your handling code here:
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gs = ge.getDefaultScreenDevice();
        DisplayMode dm = gs.getDisplayMode();
        int screenWidth = dm.getWidth()-5;
        int screenHeight = dm.getHeight()-5;
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        this.setVisible(true);
        storyList.setVisible(false);
        index_of_image.setVisible(false);
        totalPics.setVisible(false);
        jPanel1.setVisible(false);
        this.setLayout(new BorderLayout());
        jLabel1.setSize(screenWidth, screenHeight);
        this.add(jLabel1, BorderLayout.CENTER);
        this.add(imageTitle, BorderLayout.NORTH);
        
        int width = jLabel1.getWidth();
        int height = jLabel1.getHeight();
        Image image = imageIcon.getImage();
        Image newImage = image.getScaledInstance(width-5, height-5,  java.awt.Image.SCALE_SMOOTH);
        imageIcon = new ImageIcon(newImage);
        jLabel1.setIcon(imageIcon); 
        bibleText.setVisible(false);
         imageTitle.setVisible(false);
         previous_verse.setVisible(false);
         next_verse.setVisible(false);
         fullScreen.setVisible(false);
        this.pack();
    }
    private void fullScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullScreenActionPerformed

        fullScreenMode();
        
    }//GEN-LAST:event_fullScreenActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel1MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        nextImageNumber++;
        setImage();
        fullScreenMode();
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String  args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScienceGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScienceGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScienceGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScienceGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScienceGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea bibleText;
    private javax.swing.JButton fullScreen;
    private javax.swing.JLabel imageTitle;
    private javax.swing.JLabel index_of_image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton next_verse;
    private javax.swing.JButton previous_verse;
    private javax.swing.JComboBox<String> storyList;
    private javax.swing.JLabel totalPics;
    // End of variables declaration//GEN-END:variables
}
